create or replace PACKAGE  DM_data_trans_mastpol
AS

   PROCEDURE DM_MSTPOL_TRANSFROM(p_array_size IN PLS_INTEGER DEFAULT 1000,p_delta IN CHAR DEFAULT 'N');
 

END DM_data_trans_mastpol;
/
create or replace PACKAGE BODY DM_data_trans_mastpol as

    application_no   VARCHAR2(13);
    l_err_flg        NUMBER := 0;    

PROCEDURE DM_MSTPOL_TRANSFROM(p_array_size IN PLS_INTEGER DEFAULT 1000,  p_delta IN CHAR DEFAULT 'N')
IS
   STG_STARTTIME TIMESTAMP;
   V_OUTPUT_COUNT NUMBER(10);
   V_INPUT_COUNT NUMBER(10);
   G_ERR_FLG NUMBER(10);
   V_APP TITDMGMASPOL%ROWTYPE;
   L_APPNO VARCHAR2(20);
   IG_STARTTIME TIMESTAMP;
   IG_ENDTIME TIMESTAMP;
   V_ERRORMSG VARCHAR2(2000);
   temp_no NUMBER;
   sql_stmt VARCHAR2(100);
   row_count number(10) default 0;
   tmp_sql_stmt VARCHAR2(100);
   tmp_row_count number(10) default 0;


CURSOR CUR_TEMPT IS SELECT
  MSTPOLDB.ZCCDE
 ,MSTPOLDB.ZCONSGNM
 ,MSTPOLDB.ZBLADCD
 ,TITDMGMASPOL.ZENDCDE
 ,TITDMGMASPOL.CNTTYPE
FROM
  MSTPOLDB,
  TITDMGMASPOL
WHERE
    TRIM(MSTPOLDB.ENDCD) = TRIM(TITDMGMASPOL.ZENDCDE)
AND TRIM(MSTPOLDB.PRODCD) = TRIM(TITDMGMASPOL.CNTTYPE);

TYPE IG_ARRAY IS TABLE OF CUR_TEMPT%ROWTYPE;
ST_DATA IG_ARRAY;
RECORDS_AFFECTED NUMBER;

CURSOR CUR_TEMPT2 IS
SELECT
   A.CLNTNUM
  ,B.CHDRNUM
FROM
  MSTPOLGRP A,
  TITDMGMASPOL B
WHERE
    TRIM(A.GRUPNUM) =
    CASE WHEN LENGTH(TRIM(B.CHDRNUM)) = 11 THEN SUBSTR(TRIM(B.CHDRNUM),4,8)
         ELSE TRIM(B.CHDRNUM )
    END;

TYPE IG_ARRAY2 IS TABLE OF CUR_TEMPT2%ROWTYPE;
ST_DATA2 IG_ARRAY2;


BEGIN
dm_data_trans_gen.stg_starttime := systimestamp;
V_ERRORMSG:='UPDATE Table from MSTPOLDB:';
V_OUTPUT_COUNT := 0;
V_INPUT_COUNT  := 0;
G_ERR_FLG :=0;
RECORDS_AFFECTED :=0 ;

OPEN CUR_TEMPT;
LOOP
  FETCH CUR_TEMPT BULK COLLECT INTO ST_DATA LIMIT p_array_size;
  EXIT WHEN ST_DATA.COUNT = 0;
  V_INPUT_COUNT := V_INPUT_COUNT + 1 ;
  V_ERRORMSG:='Update Table TITDMGMASPOL using MSTPOLDB:';

   FOR i IN 1..ST_DATA.COUNT LOOP
    UPDATE STAGEDBUSR2.TITDMGMASPOL
    SET
        ZCCDE= TRIM(ST_DATA(i).ZCCDE)
       ,ZCONSGNM = TRIM(ST_DATA(i).ZCONSGNM)
       ,ZBLADCD= TRIM(ST_DATA(i).ZBLADCD)
    WHERE
        TRIM(ZENDCDE)= TRIM(ST_DATA(i).ZENDCDE)
    AND TRIM(CNTTYPE) = TRIM(ST_DATA(i).CNTTYPE);
    RECORDS_AFFECTED := SQL%ROWCOUNT;
   END LOOP;
END LOOP;
 CLOSE CUR_TEMPT;
 commit;

V_OUTPUT_COUNT := RECORDS_AFFECTED;

--dm_data_trans_gen.stg_starttime := systimestamp;
V_ERRORMSG:='UPDATE Table From MSTPOLGRP:';
V_OUTPUT_COUNT := 0;
V_INPUT_COUNT  := 0;
G_ERR_FLG :=0;

OPEN CUR_TEMPT2;
   LOOP
       V_INPUT_COUNT := V_INPUT_COUNT + 1 ;
       RECORDS_AFFECTED :=0 ;
       FETCH CUR_TEMPT2 BULK COLLECT INTO ST_DATA2 LIMIT p_array_size;
       EXIT WHEN ST_DATA2.COUNT = 0;
       V_ERRORMSG:='Update Table from MSTPOLGRP:';
       FOR i IN 1..ST_DATA2.COUNT LOOP
           UPDATE STAGEDBUSR2.TITDMGMASPOL SET
                  CLNTNUM=TRIM(ST_DATA2(i).CLNTNUM)
           WHERE
                  TRIM(ST_DATA2(i).CHDRNUM)=TRIM(CHDRNUM);
        END LOOP;
        RECORDS_AFFECTED := sql%rowcount;
    END LOOP;
    CLOSE CUR_TEMPT2;
    COMMIT;

V_OUTPUT_COUNT := RECORDS_AFFECTED;

V_ERRORMSG:='Update Table TITDMGMASPOL using TITDMGMASPOL:';
UPDATE STAGEDBUSR2.TITDMGMASPOL
SET
     EFFDATE=CCDATE
    ,PNDATE=CCDATE
    ,OCCDATE=CCDATE
    ,INSENDTE=CRDATE
    ,ZPENDDT=CRDATE;
COMMIT;
V_OUTPUT_COUNT := RECORDS_AFFECTED;

IF L_ERR_FLG = 0 THEN
V_ERRORMSG := 'SUCCESS';
    temp_no := DM_data_trans_gen.CONTROL_LOG('MSTPOLDB,MSTPOLGRP', 'TITDMGMASPOL', SYSTIMESTAMP,application_no,V_ERRORMSG, 'S', V_INPUT_COUNT, V_OUTPUT_COUNT);
    COMMIT;
ELSE
V_ERRORMSG := 'COMPLETED WITH ERROR';
    temp_no := DM_data_trans_gen.CONTROL_LOG('MSTPOLDB,MSTPOLGRP', 'TITDMGMASPOL', SYSTIMESTAMP,application_no,V_ERRORMSG, 'F', V_INPUT_COUNT, V_OUTPUT_COUNT);
    ROLLBACK;
END IF;

    EXCEPTION
            WHEN OTHERS THEN
                v_errormsg := v_errormsg
                              || '-'
                              || sqlerrm;
                DM_data_trans_gen.error_logs('TITDMGMASPOL', application_no, v_errormsg);
                l_err_flg := 1;
                V_ERRORMSG := 'COMPLETED WITH ERROR';
                temp_no := DM_data_trans_gen.CONTROL_LOG('MSTPOLDB,MSTPOLGRP', 'TITDMGMASPOL', SYSTIMESTAMP,application_no,V_ERRORMSG, 'F', V_INPUT_COUNT, V_OUTPUT_COUNT);    
END DM_MSTPOL_TRANSFROM;

end DM_data_trans_mastpol;
/